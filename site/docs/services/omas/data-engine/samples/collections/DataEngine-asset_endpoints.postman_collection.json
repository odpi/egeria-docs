{
	"info": {
		"_postman_id": "8e11288b-f38a-4bc2-aacc-7a4b0c675d23",
		"name": "DataEngine - asset endpoints",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "1.INSTANCE",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "demo",
							"type": "string"
						},
						{
							"key": "password",
							"value": "demo",
							"type": "string"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{base-url}}/open-metadata/admin-services/users/{{user-id}}/servers/{{server-id}}/instance",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"open-metadata",
						"admin-services",
						"users",
						"{{user-id}}",
						"servers",
						"{{server-id}}",
						"instance"
					]
				}
			},
			"response": []
		},
		{
			"name": "1.1 Register external tool",
			"protocolProfileBehavior": {
				"strictSSL": false,
				"disableUrlEncoding": true,
				"followRedirects": false
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"dataEngine\":\n    {\n        \"qualifiedName\": \"(organization)=Company::(project)=ExternalDataPlatform\",\n        \"displayName\": \"ExternalDataEngine\",\n        \"description\": \"Requesting to register external data engine capability\",\n        \"engineType\": \"DataEngine\",\n        \"engineVersion\": \"1\",\n        \"enginePatchLevel\": \"1\",\n        \"vendor\": \"Company\",\n        \"version\": \"1\",\n        \"source\": \"source\"\n    }\n}"
				},
				"url": {
					"raw": "{{base-url}}/servers/{{server-id}}/open-metadata/access-services/data-engine/users/{{user-id}}/registration",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"servers",
						"{{server-id}}",
						"open-metadata",
						"access-services",
						"data-engine",
						"users",
						"{{user-id}}",
						"registration"
					]
				}
			},
			"response": []
		},
		{
			"name": "1.2.0 Create Database, Database Schema, Relational Table - all props",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"database\": {\n        \"qualifiedName\": \"(host)=HOST::(database)=MINIMAL-all-props\",\n        \"displayName\": \"MINIMAL-all-props\",\n        \"description\": \"DB2 MINIMAL\",\n        \"databaseType\": \"DB2\",\n        \"databaseVersion\": \"10.05.0002\",\n        \"databaseInstance\": \"db2inst1\",\n        \"databaseImportedFrom\": \"DB2Connector 9.1\",\n        \"createTime\": \"1588160311000\",\n        \"modifiedTime\": \"1588160311000\",\n        \"pathName\": \"pathName\",\n        \"encodingType\": \"type\",\n        \"encodingLanguage\": \"lang\",\n        \"encodingDescription\": \"props\",\n        \"owner\": \"Administrator IIS\",\n        \"ownerType\": \"USER_ID\",\n        \"protocol\": \"ftp\",\n        \"networkAddress\": \"localhost\",\n        \"zoneMembership\": [\n            \"default\"\n        ],\n        \"otherOriginValues\": {\n            \"prop\": \"oherOrigin\"\n        },\n        \"schema\": {\n            \"qualifiedName\": \"(host)=HOST::(database)=MINIMAL-all-props::(database_schema)=DB2INST1-all-props\",\n            \"displayName\": \"DB2INST1-all-props\",\n            \"description\": \"DB2INST1 database schema\",\n            \"owner\": \"Administrator IIS\",\n            \"ownerType\": \"USER_ID\",\n            \"zoneMembership\": [\n                \"default\"\n            ],\n            \"otherOriginValues\": {\n                \"prop\": \"otherOrigin\"\n            }\n        },\n        \"tables\": [\n            {\n                \"qualifiedName\": \"(host)=HOST::(database)=MINIMAL-all-props::(database_schema)=DB2INST1::(database_table)=EMPLNAME\",\n                \"displayName\": \"EMPLNAME\",\n                \"description\": \"EMPLNAME desc\",\n                \"isDeprecated\": false,\n                \"aliases\": [\n                    \"EMPLNAME2\"\n                ],\n                \"columns\": [\n                    {\n                        \"qualifiedName\": \"(host)=HOST::(database)=MINIMAL-all-props::(database_schema)=DB2INST1::(database_table)=EMPLNAME::(database_column)=EMPID\",\n                        \"displayName\": \"EMPID\",\n                        \"minCardinality\": 1,\n                        \"maxCardinality\": 1,\n                        \"isDeprecated\": false,\n                        \"isNullable\": false,\n                        \"allowsDuplicateValues\": true,\n                        \"position\": 1,\n                        \"dataType\": \"INTEGER\",\n                        \"orderedValues\": true,\n                        \"defaultValueOverride\": \"defaultOverride\",\n                        \"defaltValue\": \"defaultValue\",\n                        \"nativeClass\": \"nativeClass\",\n                        \"aliases\": [\n                            \"ID\"\n                        ],\n                        \"sortOrder\": \"ASCENDING\",\n                        \"description\": \"id column\",\n                        \"significantDigits\": 0,\n                        \"precision\": 0,\n                        \"fixedValue\": \"1\",\n                        \"formula\": \"formula\"\n                    },\n                    {\n                        \"qualifiedName\": \"(host)=HOST::(database)=MINIMA-all-propsL::(database_schema)=DB2INST1::(database_table)=EMPLNAME::(database_column)=FNAME\",\n                        \"displayName\": \"FNAME\",\n                        \"minCardinality\": 1,\n                        \"maxCardinality\": 1,\n                        \"isDeprecated\": false,\n                        \"isNullable\": false,\n                        \"minimuumLength\": 0,\n                        \"length\": 50,\n                        \"allowsDuplicateValues\": true,\n                        \"position\": 2,\n                        \"dataType\": \"STRING\",\n                        \"orderedValues\": true,\n                        \"defaultValueOverride\": \"defaultOverride\",\n                        \"defaltValue\": \"defaultValue\",\n                        \"nativeClass\": \"nativeClass\",\n                        \"aliases\": [\n                            \"First\"\n                        ],\n                        \"sortOrder\": \"UNSORTED\",\n                        \"description\": \"first column\",\n                        \"significantDigits\": 0,\n                        \"precision\": 0,\n                        \"fixedValue\": \"name\",\n                        \"formula\": \"formula\"\n                    },\n                    {\n                        \"qualifiedName\": \"(host)=HOST::(database)=MINIMAL-all-props::(database_schema)=DB2INST1::(database_table)=EMPLNAME::(database_column)=SURNAME\",\n                        \"displayName\": \"SURNAME\",\n                        \"minCardinality\": 1,\n                        \"maxCardinality\": 1,\n                        \"isDeprecated\": false,\n                        \"isNullable\": false,\n                        \"minimuumLength\": 0,\n                        \"length\": 50,\n                        \"allowsDuplicateValues\": true,\n                        \"position\": 3,\n                        \"dataType\": \"STRING\",\n                        \"orderedValues\": true,\n                        \"defaultValueOverride\": \"defaultOverride\",\n                        \"defaltValue\": \"defaultValue\",\n                        \"nativeClass\": \"nativeClass\",\n                        \"aliases\": [\n                            \"Last\"\n                        ],\n                        \"sortOrder\": \"UNSORTED\",\n                        \"description\": \"surname column\",\n                        \"significantDigits\": 0,\n                        \"precision\": 0,\n                        \"fixedValue\": \"name\",\n                        \"formula\": \"formula\"\n                    },\n                    {\n                        \"qualifiedName\": \"(host)=HOST::(database)=MINIMAL-all-props::(database_schema)=DB2INST1::(database_table)=EMPLNAME::(database_column)=LOCID\",\n                        \"displayName\": \"LOCID\",\n                        \"minCardinality\": 1,\n                        \"maxCardinality\": 1,\n                        \"isDeprecated\": false,\n                        \"isNullable\": false,\n                        \"allowsDuplicateValues\": true,\n                        \"position\": 4,\n                        \"dataType\": \"INTEGER\",\n                        \"orderedValues\": true,\n                        \"defaultValueOverride\": \"defaultOverride\",\n                        \"defaltValue\": \"defaultValue\",\n                        \"nativeClass\": \"nativeClass\",\n                        \"aliases\": [\n                            \"Location\"\n                        ],\n                        \"sortOrder\": \"ASCENDING\",\n                        \"description\": \"locid column\",\n                        \"significantDigits\": 0,\n                        \"precision\": 0,\n                        \"fixedValue\": \"1\",\n                        \"formula\": \"formula\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"externalSourceName\": \"(organization)=Company::(project)=ExternalDataPlatform\"\n}"
				},
				"url": {
					"raw": "{{base-url}}/servers/{{server-id}}/open-metadata/access-services/data-engine/users/{{user-id}}/databases",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"servers",
						"{{server-id}}",
						"open-metadata",
						"access-services",
						"data-engine",
						"users",
						"{{user-id}}",
						"databases"
					]
				}
			},
			"response": []
		},
		{
			"name": "1.2 Create Database - required props only",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"database\": {\n        \"qualifiedName\": \"(host)=HOST::(database)=MINIMAL-basic\",\n        \"displayName\": \"MINIMAL-basic\",\n        \"networkAddress\" : \"localhost\"\n    },\n    \"externalSourceName\": \"(organization)=Company::(project)=ExternalDataPlatform\"\n}"
				},
				"url": {
					"raw": "{{base-url}}/servers/{{server-id}}/open-metadata/access-services/data-engine/users/{{user-id}}/databases",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"servers",
						"{{server-id}}",
						"open-metadata",
						"access-services",
						"data-engine",
						"users",
						"{{user-id}}",
						"databases"
					]
				}
			},
			"response": []
		},
		{
			"name": "7.2 Create Incomplete Database - all props, only database",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"database\": {\n        \"qualifiedName\": \"(host)=HOST::(database)=MINIMAL-all-props\",\n        \"displayName\": \"MINIMAL-all-props\",\n        \"description\": \"DB2 MINIMAL\",\n        \"databaseType\": \"DB2\",\n        \"databaseVersion\": \"10.05.0002\",\n        \"databaseInstance\": \"db2inst1\",\n        \"databaseImportedFrom\": \"DB2Connector 9.1\",\n        \"createTime\": \"1588160311000\",\n        \"modifiedTime\": \"1588160311000\",\n        \"pathName\": \"pathName\",\n        \"encodingType\": \"type\",\n        \"encodingLanguage\": \"lang\",\n        \"encodingDescription\": \"props\",\n        \"owner\": \"Administrator IIS\",\n        \"ownerType\": \"USER_ID\",\n        \"protocol\" : \"ftp\",\n        \"networkAddress\" : \"localhost\",\n        \"zoneMembership\": [\n            \"default\"\n        ],\n        \"otherOriginValues\":{\n        \t\"prop\":\"oherOrigin\"\n        }\n    },\n    \"externalSourceName\": \"(organization)=Company::(project)=ExternalDataPlatform\"\n}"
				},
				"url": {
					"raw": "{{base-url}}/servers/{{server-id}}/open-metadata/access-services/data-engine/users/{{user-id}}/databases",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"servers",
						"{{server-id}}",
						"open-metadata",
						"access-services",
						"data-engine",
						"users",
						"{{user-id}}",
						"databases"
					]
				}
			},
			"response": []
		},
		{
			"name": "1.4 Create Database Schema - required props only",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"databaseQualifiedName\": \"(host)=HOST::(database)=MINIMAL-basic\",\n    \"databaseSchema\": {\n        \"qualifiedName\": \"(host)=HOST::(database)=MINIMAL-basic::(database_schema)=DB2INST1-basic\",\n        \"displayName\": \"DB2INST1-basic\"\n    },\n    \"externalSourceName\": \"(organization)=Company::(project)=ExternalDataPlatform\"\n}"
				},
				"url": {
					"raw": "{{base-url}}/servers/{{server-id}}/open-metadata/access-services/data-engine/users/{{user-id}}/database-schemas",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"servers",
						"{{server-id}}",
						"open-metadata",
						"access-services",
						"data-engine",
						"users",
						"{{user-id}}",
						"database-schemas"
					]
				}
			},
			"response": []
		},
		{
			"name": "1.5 Create Database Schema - all props",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"databaseQualifiedName\": \"(host)=HOST::(database)=MINIMAL-all-props\",\n    \"databaseSchema\": {\n        \"qualifiedName\": \"(host)=HOST::(database)=MINIMAL-all-props::(database_schema)=DB2INST1-all-props\",\n        \"displayName\": \"DB2INST1-all-props\",\n        \"description\": \"DB2INST1 database schema\",\n        \"owner\": \"Administrator IIS\",\n        \"ownerType\": \"USER_ID\",\n        \"zoneMembership\": [\n            \"default\"\n        ],\n        \"otherOriginValues\":{\n        \t\"prop\":\"otherOrigin\"\n        }\n    },\n    \"externalSourceName\": \"(organization)=Company::(project)=ExternalDataPlatform\",\n    \"incomplete\": false\n}"
				},
				"url": {
					"raw": "{{base-url}}/servers/{{server-id}}/open-metadata/access-services/data-engine/users/{{user-id}}/database-schemas",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"servers",
						"{{server-id}}",
						"open-metadata",
						"access-services",
						"data-engine",
						"users",
						"{{user-id}}",
						"database-schemas"
					]
				}
			},
			"response": []
		},
		{
			"name": "1.6 Create Relational Table - required props only",
			"protocolProfileBehavior": {
				"followRedirects": false
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"databaseSchemaQualifiedName\": \"(host)=HOST::(database)=MINIMAL-basic::(database_schema)=DB2INST1-basic\",\n    \"table\": {\n        \"qualifiedName\": \"(host)=HOST::(database)=MINIMAL-basic::(database_schema)=DB2INST1::(database_table)=EMPLNAME-basic\",\n        \"displayName\": \"EMPLNAME-basic\",\n        \"columns\": [\n            {\n                \"qualifiedName\": \"(host)=HOST::(database)=MINIMAL-basic::(database_schema)=DB2INST1::(database_table)=EMPLNAME-basic::(database_column)=EMPID\",\n                \"displayName\": \"EMPID\",\n                \"dataType\": \"INTEGER\"\n            },\n            {\n                \"qualifiedName\": \"(host)=HOST::(database)=MINIMAL-basic::(database_schema)=DB2INST1::(database_table)=EMPLNAME-basic::(database_column)=FNAME\",\n                \"displayName\": \"FNAME\",\n                \"dataType\": \"STRING\"\n            },\n            {\n                \"qualifiedName\": \"(host)=HOST::(database)=MINIMAL-basic::(database_schema)=DB2INST1::(database_table)=EMPLNAME-basic::(database_column)=LOCID\",\n                \"displayName\": \"LOCID\",\n                \"dataType\": \"INTEGER\"\n            },\n            {\n                \"qualifiedName\": \"(host)=HOST::(database)=MINIMAL-basic::(database_schema)=DB2INST1::(database_table)=EMPLNAME-basic::(database_column)=SURNAME\",\n                \"displayName\": \"SURNAME\",\n                  \"dataType\": \"STRING\"\n            }\n        ]\n    },\n   \"externalSourceName\": \"(organization)=Company::(project)=ExternalDataPlatform\"\n}"
				},
				"url": {
					"raw": "{{base-url}}/servers/{{server-id}}/open-metadata/access-services/data-engine/users/{{user-id}}/relational-tables",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"servers",
						"{{server-id}}",
						"open-metadata",
						"access-services",
						"data-engine",
						"users",
						"{{user-id}}",
						"relational-tables"
					]
				}
			},
			"response": []
		},
		{
			"name": "1.7 Create Relational Table - all properties",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"databaseSchemaQualifiedName\": \"(host)=HOST::(database)=MINIMAL-all-props::(database_schema)=DB2INST1-all-props\",\n    \"table\": {\n        \"qualifiedName\": \"(host)=HOST::(database)=MINIMAL-all-props::(database_schema)=DB2INST1::(database_table)=EMPLNAME\",\n        \"displayName\": \"EMPLNAME\",\n        \"description\": \"EMPLNAME desc\",\n        \"isDeprecated\": false,\n        \"aliases\": [\n            \"EMPLNAME2\"\n        ],\n        \"columns\": [\n            {\n                \"qualifiedName\": \"(host)=HOST::(database)=MINIMAL-all-props::(database_schema)=DB2INST1::(database_table)=EMPLNAME::(database_column)=EMPID\",\n                \"displayName\": \"EMPID\",\n                \"minCardinality\": 1,\n                \"maxCardinality\": 1,\n                \"isDeprecated\": false,\n                \"isNullable\": false,\n                \"allowsDuplicateValues\": true,\n                \"position\": 1,\n                \"dataType\": \"INTEGER\",\n                \"orderedValues\": true,\n                \"defaultValueOverride\": \"defaultOverride\",\n                \"defaltValue\": \"defaultValue\",\n                \"nativeClass\": \"nativeClass\",\n                \"aliases\": [\n                    \"ID\"\n                ],\n                \"sortOrder\": \"ASCENDING\",\n                \"description\": \"id column\",\n                \"significantDigits\": 0,\n                \"precision\": 0,\n                \"fixedValue\": \"1\",\n                \"formula\": \"formula\"\n            },\n            {\n                \"qualifiedName\": \"(host)=HOST::(database)=MINIMA-all-propsL::(database_schema)=DB2INST1::(database_table)=EMPLNAME::(database_column)=FNAME\",\n                \"displayName\": \"FNAME\",\n                \"minCardinality\": 1,\n                \"maxCardinality\": 1,\n                \"isDeprecated\": false,\n                \"isNullable\": false,\n                \"minimuumLength\": 0,\n                \"length\": 50,\n                \"allowsDuplicateValues\": true,\n                \"position\": 2,\n                \"dataType\": \"STRING\",\n                \"orderedValues\": true,\n                \"defaultValueOverride\": \"defaultOverride\",\n                \"defaltValue\": \"defaultValue\",\n                \"nativeClass\": \"nativeClass\",\n                \"aliases\": [\n                    \"First\"\n                ],\n                \"sortOrder\": \"UNSORTED\",\n                \"description\": \"first column\",\n                \"significantDigits\": 0,\n                \"precision\": 0,\n                \"fixedValue\": \"name\",\n                \"formula\": \"formula\"\n            },\n            {\n                \"qualifiedName\": \"(host)=HOST::(database)=MINIMAL-all-props::(database_schema)=DB2INST1::(database_table)=EMPLNAME::(database_column)=SURNAME\",\n                \"displayName\": \"SURNAME\",\n                \"minCardinality\": 1,\n                \"maxCardinality\": 1,\n                \"isDeprecated\": false,\n                \"isNullable\": false,\n                \"minimuumLength\": 0,\n                \"length\": 50,\n                \"allowsDuplicateValues\": true,\n                \"position\": 3,\n                \"dataType\": \"STRING\",\n                \"orderedValues\": true,\n                \"defaultValueOverride\": \"defaultOverride\",\n                \"defaltValue\": \"defaultValue\",\n                \"nativeClass\": \"nativeClass\",\n                \"aliases\": [\n                    \"Last\"\n                ],\n                \"sortOrder\": \"UNSORTED\",\n                \"description\": \"surname column\",\n                \"significantDigits\": 0,\n                \"precision\": 0,\n                \"fixedValue\": \"name\",\n                \"formula\": \"formula\"\n            },\n            {\n                \"qualifiedName\": \"(host)=HOST::(database)=MINIMAL-all-props::(database_schema)=DB2INST1::(database_table)=EMPLNAME::(database_column)=LOCID\",\n                \"displayName\": \"LOCID\",\n                \"minCardinality\": 1,\n                \"maxCardinality\": 1,\n                \"isDeprecated\": false,\n                \"isNullable\": false,\n                \"allowsDuplicateValues\": true,\n                \"position\": 4,\n                \"dataType\": \"INTEGER\",\n                \"orderedValues\": true,\n                \"defaultValueOverride\": \"defaultOverride\",\n                \"defaltValue\": \"defaultValue\",\n                \"nativeClass\": \"nativeClass\",\n                \"aliases\": [\n                    \"Location\"\n                ],\n                \"sortOrder\": \"ASCENDING\",\n                \"description\": \"locid column\",\n                \"significantDigits\": 0,\n                \"precision\": 0,\n                \"fixedValue\": \"1\",\n                \"formula\": \"formula\"\n            }\n        ]\n    },\n   \"externalSourceName\": \"(organization)=Company::(project)=ExternalDataPlatform\",\n   \"incomplete\": false\n}"
				},
				"url": {
					"raw": "{{base-url}}/servers/{{server-id}}/open-metadata/access-services/data-engine/users/{{user-id}}/relational-tables",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"servers",
						"{{server-id}}",
						"open-metadata",
						"access-services",
						"data-engine",
						"users",
						"{{user-id}}",
						"relational-tables"
					]
				}
			},
			"response": []
		},
		{
			"name": "1.8 Create DataFile - required props only",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n   \"externalSourceName\": \"(organization)=Company::(project)=ExternalDataPlatform\",\n    \"file\": {\n        \"fileType\": \"DataFile\",\n        \"qualifiedName\": \"(host)=HOST::(data_file)=DATAFILE.DAT\",\n        \"displayName\": \"dataFile.dat\",\n        \"columns\": [\n            {\n                \"qualifiedName\": \"(data_file)=DATAFILE.DAT::(data_file_record)=schema::(data_file_field)=COLUMN-A\",\n                \"displayName\": \"column-a\"\n            },\n            {\n                \"qualifiedName\": \"(data_file)=DATAFILE.DAT::(data_file_record)=schema::(data_file_field)=COLUMN-B\",\n                \"displayName\": \"column-b\"\n            }\n        ]\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base-url}}/servers/{{server-id}}/open-metadata/access-services/data-engine/users/{{user-id}}/data-files",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"servers",
						"{{server-id}}",
						"open-metadata",
						"access-services",
						"data-engine",
						"users",
						"{{user-id}}",
						"data-files"
					]
				}
			},
			"response": []
		},
		{
			"name": "1.9 Create DataFile - all properties",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"externalSourceName\": \"(organization)=Company::(project)=ExternalDataPlatform\",\n    \"file\": {\n        \"fileType\": \"DataFile\",\n        \"qualifiedName\": \"(file)=DATAFILE.DAT\",\n        \"displayName\": \"dataFile.dat\",\n        \"pathName\": \"/home/files/dataFile.dat\",\n        \"additionalProperties\": {\n            \"key1\": \"value1\",\n            \"key2\": \"value2\"\n        },\n        \"owner\": \"owner\",\n        \"ownerType\": \"USER_ID\",\n        \"zoneMembership\": [\n            \"ZONE_1\"\n        ],\n        \"createTime\": \"1617095893010\",\n        \"modifiedTime\": \"1617095893010\",\n        \"description\": \"Data file description.\",\n        \"protocol\" : \"ftp\",\n        \"networkAddress\" : \"localhost\",\n        \"columns\": [\n            {\n                \"qualifiedName\": \"(file)=DATAFILE.DAT::(column)=COLUMN-A\",\n                \"displayName\": \"column-a\",\n                \"additionalProperties\": {\n                    \"key-1\": \"value-1\",\n                    \"key-2\": \"value-2\"\n                },\n                \"description\": \"COLUMN-A DESCRIPTION\",\n                \"position\": 0,\n                \"minCardinality\": 0,\n                \"maxCardinality\": 1,\n                \"allowsDuplicateValues\": false,\n                \"orderedValues\": false,\n                \"defaultValueOverride\": \"COLUMN-A-DEFAULT-VALUE\",\n                \"nativeClass\": \"COLUMN-A-NATIVE-CLSAS\",\n                \"aliases\": [\n                    \"COLUMN-1\"\n                ],\n                \"dataItemSortOrder\": \"UNKNOWN\"\n            },\n            {\n                \"qualifiedName\": \"(file)=DATAFILE.DAT::(column)=COLUMN-B\",\n                \"displayName\": \"column-b\",\n                \"additionalProperties\": {\n                    \"key-1\": \"value-1\",\n                    \"key-2\": \"value-2\"\n                },\n                \"description\": \"COLUMN-B DESCRIPTION\",\n                \"position\": 0,\n                \"minCardinality\": 0,\n                \"maxCardinality\": 1,\n                \"allowsDuplicateValues\": false,\n                \"orderedValues\": false,\n                \"defaultValueOverride\": \"COLUMN-B-DEFAULT-VALUE\",\n                \"nativeClass\": \"COLUMN-B-NATIVE-CLSAS\",\n                \"aliases\": [\n                    \"COLUMN-2\"\n                ],\n                \"dataItemSortOrder\": \"UNKNOWN\"\n            }\n        ]\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base-url}}/servers/{{server-id}}/open-metadata/access-services/data-engine/users/{{user-id}}/data-files",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"servers",
						"{{server-id}}",
						"open-metadata",
						"access-services",
						"data-engine",
						"users",
						"{{user-id}}",
						"data-files"
					]
				}
			},
			"response": []
		},
		{
			"name": "1.10 Create CSVFile - required props only",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"externalSourceName\": \"(organization)=Company::(project)=ExternalDataPlatform\",\n    \"file\": {\n        \"fileType\": \"CSVFile\",\n        \"qualifiedName\": \"(file)=CSVFILE.CSV\",\n        \"displayName\": \"csvFile.csv\",\n        \"columns\": [\n            {\n                \"qualifiedName\": \"(file)=CSVFILE.CSV::(column)=COLUMN-A\",\n                \"displayName\": \"column-a\"\n            },\n            {\n                \"qualifiedName\": \"(file)=CSVFILE.CSV::(column)=COLUMN-B\",\n                \"displayName\": \"column-b\"\n            }\n        ]\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base-url}}/servers/{{server-id}}/open-metadata/access-services/data-engine/users/{{user-id}}/data-files",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"servers",
						"{{server-id}}",
						"open-metadata",
						"access-services",
						"data-engine",
						"users",
						"{{user-id}}",
						"data-files"
					]
				}
			},
			"response": []
		},
		{
			"name": "1.11 Create CSVFile - all properties",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"externalSourceName\": \"(organization)=Company::(project)=ExternalDataPlatform\",\n    \"file\": {\n        \"fileType\": \"CSVFile\",\n        \"qualifiedName\": \"(file)=CSVFILE.CSV\",\n        \"displayName\": \"csvFile.csv\",\n        \"pathName\": \"/home/files/csvFile.csv\",\n        \"additionalProperties\": {\n            \"key1\": \"value1\",\n            \"key2\": \"value2\"\n        },\n        \"owner\": \"owner\",\n        \"ownerType\": \"USER_ID\",\n        \"zoneMembership\": [\n            \"ZONE_1\"\n        ],\n        \"createTime\": \"1617095893010\",\n        \"modifiedTime\": \"1617095893010\",\n        \"description\": \"Data file description.\",\n        \"protocol\" : \"ftp\",\n        \"networkAddress\" : \"localhost\",\n        \"columns\": [\n            {\n                \"qualifiedName\": \"(file)=CSVFILE.CSV::(column)=COLUMN-A\",\n                \"displayName\": \"column-a\",\n                \"additionalProperties\": {\n                    \"key-1\": \"value-1\",\n                    \"key-2\": \"value-2\"\n                },\n                \"description\": \"COLUMN-A DESCRIPTION\",\n                \"position\": 0,\n                \"minCardinality\": 0,\n                \"maxCardinality\": 1,\n                \"allowsDuplicateValues\": false,\n                \"orderedValues\": false,\n                \"defaultValueOverride\": \"COLUMN-A-DEFAULT-VALUE\",\n                \"nativeClass\": \"COLUMN-A-NATIVE-CLSAS\",\n                \"aliases\": [\n                    \"COLUMN-1\"\n                ],\n                \"dataItemSortOrder\": \"UNKNOWN\"\n            },\n            {\n                \"qualifiedName\": \"(file)=CSVFILE.CSV::(column)=COLUMN-B\",\n                \"displayName\": \"column-b\",\n                \"additionalProperties\": {\n                    \"key-1\": \"value-1\",\n                    \"key-2\": \"value-2\"\n                },\n                \"description\": \"COLUMN-B DESCRIPTION\",\n                \"position\": 0,\n                \"minCardinality\": 0,\n                \"maxCardinality\": 1,\n                \"allowsDuplicateValues\": false,\n                \"orderedValues\": false,\n                \"defaultValueOverride\": \"COLUMN-B-DEFAULT-VALUE\",\n                \"nativeClass\": \"COLUMN-B-NATIVE-CLSAS\",\n                \"aliases\": [\n                    \"COLUMN-2\"\n                ],\n                \"dataItemSortOrder\": \"UNKNOWN\"\n            }\n        ]\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base-url}}/servers/{{server-id}}/open-metadata/access-services/data-engine/users/{{user-id}}/data-files",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"servers",
						"{{server-id}}",
						"open-metadata",
						"access-services",
						"data-engine",
						"users",
						"{{user-id}}",
						"data-files"
					]
				}
			},
			"response": []
		},
		{
			"name": "2.1 Delete Relational Table - EMPLNAME basic",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"qualifiedName\": \"(host)=HOST::(database)=MINIMAL-basic::(database_schema)=DB2INST1::(database_table)=EMPLNAME-basic\",\n    \"externalSourceName\": \"(organization)=Company::(project)=ExternalDataPlatform\",\n    \"deleteSemantic\":\"SOFT\"\n}"
				},
				"url": {
					"raw": "{{base-url}}/servers/{{server-id}}/open-metadata/access-services/data-engine/users/{{user-id}}/relational-tables",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"servers",
						"{{server-id}}",
						"open-metadata",
						"access-services",
						"data-engine",
						"users",
						"{{user-id}}",
						"relational-tables"
					]
				}
			},
			"response": []
		},
		{
			"name": "2.2 Delete Database Schema - DB2INST1",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"qualifiedName\": \"(host)=HOST::(database)=MINIMAL::(database_schema)=DB2INST1-basic\",\n    \"externalSourceName\": \"(organization)=Company::(project)=ExternalDataPlatform\"\n}"
				},
				"url": {
					"raw": "{{base-url}}/servers/{{server-id}}/open-metadata/access-services/data-engine/users/{{user-id}}/database-schemas",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"servers",
						"{{server-id}}",
						"open-metadata",
						"access-services",
						"data-engine",
						"users",
						"{{user-id}}",
						"database-schemas"
					]
				}
			},
			"response": []
		},
		{
			"name": "2.3 Delete Database - MINIMAL",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"qualifiedName\": \"(host)=HOST::(database)=MINIMAL-basic\",\n    \"externalSourceName\": \"(organization)=Company::(project)=ExternalDataPlatform\"\n}"
				},
				"url": {
					"raw": "{{base-url}}/servers/{{server-id}}/open-metadata/access-services/data-engine/users/{{user-id}}/databases",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"servers",
						"{{server-id}}",
						"open-metadata",
						"access-services",
						"data-engine",
						"users",
						"{{user-id}}",
						"databases"
					]
				}
			},
			"response": []
		},
		{
			"name": "2.4 Delete CSVFile",
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"qualifiedName\": \"(host)=HOST::(data_file_folder)=/::(data_file_folder)=data::(data_file_folder)=files::(data_file_folder)=minimal::(data_file)=names.csv\",\n    \"externalSourceName\": \"(organization)=Company::(project)=ExternalDataPlatform\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base-url}}/servers/{{server-id}}/open-metadata/access-services/data-engine/users/{{user-id}}/data-files",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"servers",
						"{{server-id}}",
						"open-metadata",
						"access-services",
						"data-engine",
						"users",
						"{{user-id}}",
						"data-files"
					]
				}
			},
			"response": []
		},
		{
			"name": "2.5 Delete DataFile",
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"qualifiedName\": \"(host)=HOST::(data_file_folder)=/::(data_file_folder)=data::(data_file_folder)=files::(data_file_folder)=minimal::(data_file)=locations.csv\",\n    \"externalSourceName\": \"(organization)=Company::(project)=ExternalDataPlatform\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base-url}}/servers/{{server-id}}/open-metadata/access-services/data-engine/users/{{user-id}}/data-files",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"servers",
						"{{server-id}}",
						"open-metadata",
						"access-services",
						"data-engine",
						"users",
						"{{user-id}}",
						"data-files"
					]
				}
			},
			"response": []
		},
		{
			"name": "2.7 Delete folder - files",
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"qualifiedName\": \"(organization)=Company::(project)=ExternalDataPlatform::/data/files\",\n    \"externalSourceName\": \"(organization)=Company::(project)=ExternalDataPlatform\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base-url}}/servers/{{server-id}}/open-metadata/access-services/data-engine/users/{{user-id}}/folders",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"servers",
						"{{server-id}}",
						"open-metadata",
						"access-services",
						"data-engine",
						"users",
						"{{user-id}}",
						"folders"
					]
				}
			},
			"response": []
		},
		{
			"name": "2.8 Delete folder - data",
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"qualifiedName\": \"(organization)=Company::(project)=ExternalDataPlatform::/data\",\n    \"externalSourceName\": \"(organization)=Company::(project)=ExternalDataPlatform\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base-url}}/servers/{{server-id}}/open-metadata/access-services/data-engine/users/{{user-id}}/folders",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"servers",
						"{{server-id}}",
						"open-metadata",
						"access-services",
						"data-engine",
						"users",
						"{{user-id}}",
						"folders"
					]
				}
			},
			"response": []
		},
		{
			"name": "2.10 Delete folder - /",
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"qualifiedName\": \"(organization)=Company::(project)=ExternalDataPlatform::/\",\n    \"externalSourceName\": \"(organization)=Company::(project)=ExternalDataPlatform\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base-url}}/servers/{{server-id}}/open-metadata/access-services/data-engine/users/{{user-id}}/folders",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"servers",
						"{{server-id}}",
						"open-metadata",
						"access-services",
						"data-engine",
						"users",
						"{{user-id}}",
						"folders"
					]
				}
			},
			"response": []
		},
		{
			"name": "2.10 Delete connection for csv file",
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"qualifiedName\": \"CSVFile:(host)=HOST::(data_file_folder)=/::(data_file_folder)=data::(data_file_folder)=files::(data_file_folder)=minimal::(data_file)=names.csv Connection\",\n    \"externalSourceName\": \"(organization)=Company::(project)=ExternalDataPlatform\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base-url}}/servers/{{server-id}}/open-metadata/access-services/data-engine/users/{{user-id}}/connections",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"servers",
						"{{server-id}}",
						"open-metadata",
						"access-services",
						"data-engine",
						"users",
						"{{user-id}}",
						"connections"
					]
				}
			},
			"response": []
		},
		{
			"name": "2.11 Delete endpoint for csv file",
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"qualifiedName\": \"CSVFile:(host)=HOST::(data_file_folder)=/::(data_file_folder)=data::(data_file_folder)=files::(data_file_folder)=minimal::(data_file)=names.csv Endpoint\",\n    \"externalSourceName\": \"(organization)=Company::(project)=ExternalDataPlatform\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base-url}}/servers/{{server-id}}/open-metadata/access-services/data-engine/users/{{user-id}}/endpoints",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"servers",
						"{{server-id}}",
						"open-metadata",
						"access-services",
						"data-engine",
						"users",
						"{{user-id}}",
						"endpoints"
					]
				}
			},
			"response": []
		},
		{
			"name": "3.1 Create incomplete Database - required props only",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"database\": {\n        \"qualifiedName\": \"(host)=HOST::(database)=MINIMAL-basic\",\n        \"displayName\": \"MINIMAL-basic\",\n        \"networkAddress\": \"localhost\",\n        \"incomplete\": true\n    },\n    \"externalSourceName\": \"(organization)=Company::(project)=ExternalDataPlatform\"\n}"
				},
				"url": {
					"raw": "{{base-url}}/servers/{{server-id}}/open-metadata/access-services/data-engine/users/{{user-id}}/databases",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"servers",
						"{{server-id}}",
						"open-metadata",
						"access-services",
						"data-engine",
						"users",
						"{{user-id}}",
						"databases"
					]
				}
			},
			"response": []
		},
		{
			"name": "3.2 Create Incomplete Database - all props",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"database\": {\n        \"qualifiedName\": \"(host)=HOST::(database)=MINIMAL-all-props\",\n        \"displayName\": \"MINIMAL-all-props\",\n        \"description\": \"DB2 MINIMAL\",\n        \"databaseType\": \"DB2\",\n        \"databaseVersion\": \"10.05.0002\",\n        \"databaseInstance\": \"db2inst1\",\n        \"databaseImportedFrom\": \"DB2Connector 9.1\",\n        \"createTime\": \"1588160311000\",\n        \"modifiedTime\": \"1588160311000\",\n        \"pathName\": \"pathName\",\n        \"encodingType\": \"type\",\n        \"encodingLanguage\": \"lang\",\n        \"encodingDescription\": \"props\",\n        \"owner\": \"Administrator IIS\",\n        \"ownerType\": \"USER_ID\",\n        \"protocol\" : \"ftp\",\n        \"networkAddress\" : \"localhost\",\n        \"zoneMembership\": [\n            \"default\"\n        ],\n        \"otherOriginValues\":{\n        \t\"prop\":\"oherOrigin\"\n        },\n         \"incomplete\": true\n    },\n    \"externalSourceName\": \"(organization)=Company::(project)=ExternalDataPlatform\"\n}"
				},
				"url": {
					"raw": "{{base-url}}/servers/{{server-id}}/open-metadata/access-services/data-engine/users/{{user-id}}/databases",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"servers",
						"{{server-id}}",
						"open-metadata",
						"access-services",
						"data-engine",
						"users",
						"{{user-id}}",
						"databases"
					]
				}
			},
			"response": []
		},
		{
			"name": "3.3 Create incomplete Database Schema - required props only",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"databaseSchema\": {\n        \"qualifiedName\": \"(database_schema)=DB2INST1-basic-incomplete\",\n        \"displayName\": \"DB2INST1-basic-incomplete\",\n        \"incomplete\": true\n    },\n    \"databaseQualifiedName\": \"(host)=HOST::(database)=MINIMAL-basic\",\n    \"externalSourceName\": \"(organization)=Company::(project)=ExternalDataPlatform\"\n}"
				},
				"url": {
					"raw": "{{base-url}}/servers/{{server-id}}/open-metadata/access-services/data-engine/users/{{user-id}}/database-schemas",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"servers",
						"{{server-id}}",
						"open-metadata",
						"access-services",
						"data-engine",
						"users",
						"{{user-id}}",
						"database-schemas"
					]
				}
			},
			"response": []
		},
		{
			"name": "3.4 Create incomplete Database Schema - all props",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"databaseSchema\": {\n        \"qualifiedName\": \"(database_schema)=DB2INST1-all-props--basic-incomplete\",\n        \"displayName\": \"DB2INST1-all-props-incomplete\",\n        \"description\": \"DB2INST1 database schema incomplete description\",\n        \"owner\": \"Administrator IIS\",\n        \"ownerType\": \"USER_ID\",\n        \"zoneMembership\": [\n            \"default\"\n        ],\n        \"otherOriginValues\": {\n            \"prop\": \"otherOrigin\"\n        },\n        \"incomplete\": true\n    },\n    \"databaseQualifiedName\": \"(host)=HOST::(database)=MINIMAL-all-props\",\n    \"externalSourceName\": \"(organization)=Company::(project)=ExternalDataPlatform\"\n}"
				},
				"url": {
					"raw": "{{base-url}}/servers/{{server-id}}/open-metadata/access-services/data-engine/users/{{user-id}}/database-schemas",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"servers",
						"{{server-id}}",
						"open-metadata",
						"access-services",
						"data-engine",
						"users",
						"{{user-id}}",
						"database-schemas"
					]
				}
			},
			"response": []
		},
		{
			"name": "3.5 Create incomplete Relational Table - required props only",
			"protocolProfileBehavior": {
				"followRedirects": false
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"databaseSchemaQualifiedName\": \"(database_schema)=DB2INST1-basic-incomplete\",\n    \"table\": {\n        \"qualifiedName\": \"(database_schema)=DB2INST1-basic-incomplete::(database_table)=EMPLNAME-basic-incomplete\",\n        \"displayName\": \"EMPLNAME-basic\",\n        \"columns\": [\n            {\n                \"qualifiedName\": \"(database_schema)=DB2INST1-basic-incomplete::(database_table)=EMPLNAME-basic-incomplete::(database_column)=EMPID\",\n                \"displayName\": \"EMPID\",\n                \"dataType\": \"INTEGER\"\n            },\n            {\n                \"qualifiedName\": \"(database_schema)=DB2INST1-basic-incomplete::(database_table)=EMPLNAME-basic-incomplete::(database_column)=FNAME\",\n                \"displayName\": \"FNAME\",\n                \"dataType\": \"STRING\"\n            },\n            {\n                \"qualifiedName\": \"(database_schema)=DB2INST1-basic-incomplete::(database_table)=EMPLNAME-basic-incomplete::(database_column)=LOCID\",\n                \"displayName\": \"LOCID\",\n                \"dataType\": \"INTEGER\"\n            },\n            {\n                \"qualifiedName\": \"(database_schema)=DB2INST1-basic-incomplete::(database_table)=EMPLNAME-basic-incomplete::(database_column)=SURNAME\",\n                \"displayName\": \"SURNAME\",\n                \"dataType\": \"STRING\"\n            }\n        ],\n        \"incomplete\": true\n    },\n    \"externalSourceName\": \"(organization)=Company::(project)=ExternalDataPlatform\"\n}"
				},
				"url": {
					"raw": "{{base-url}}/servers/{{server-id}}/open-metadata/access-services/data-engine/users/{{user-id}}/relational-tables",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"servers",
						"{{server-id}}",
						"open-metadata",
						"access-services",
						"data-engine",
						"users",
						"{{user-id}}",
						"relational-tables"
					]
				}
			},
			"response": []
		},
		{
			"name": "3.6 Create incomplete Relational Table - all properties",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"databaseSchemaQualifiedName\": \"(database_schema)=DB2INST1-all-props-incomplete\",\n    \"table\": {\n        \"qualifiedName\": \"(database_schema)=DB2INST1-all-props-incomplete::(database_table)=EMPLNAME-all-props-incomplete\",\n        \"displayName\": \"EMPLNAME-all-props-incomplete\",\n        \"description\": \"EMPLNAME-all-props-incomplete description\",\n        \"isDeprecated\": false,\n        \"aliases\": [\n            \"EMPLNAME2\"\n        ],\n        \"columns\": [\n            {\n                \"qualifiedName\": \"(database_schema)=DB2INST1-all-props-incomplete::(database_table)=EMPLNAME-all-props-incomplete::(database_column)=EMPID\",\n                \"displayName\": \"EMPID\",\n                \"minCardinality\": 1,\n                \"maxCardinality\": 1,\n                \"isDeprecated\": false,\n                \"isNullable\": false,\n                \"allowsDuplicateValues\": true,\n                \"position\": 1,\n                \"dataType\": \"INTEGER\",\n                \"orderedValues\": true,\n                \"defaultValueOverride\": \"defaultOverride\",\n                \"defaltValue\": \"defaultValue\",\n                \"nativeClass\": \"nativeClass\",\n                \"aliases\": [\n                    \"ID\"\n                ],\n                \"sortOrder\": \"ASCENDING\",\n                \"description\": \"id column\",\n                \"significantDigits\": 0,\n                \"precision\": 0,\n                \"fixedValue\": \"1\",\n                \"formula\": \"formula\"\n            },\n            {\n                \"qualifiedName\": \"(database_schema)=DB2INST1-all-props-incomplete::(database_table)=EMPLNAME-all-props-incomplete::(database_column)=FNAME\",\n                \"displayName\": \"FNAME\",\n                \"minCardinality\": 1,\n                \"maxCardinality\": 1,\n                \"isDeprecated\": false,\n                \"isNullable\": false,\n                \"minimuumLength\": 0,\n                \"length\": 50,\n                \"allowsDuplicateValues\": true,\n                \"position\": 2,\n                \"dataType\": \"STRING\",\n                \"orderedValues\": true,\n                \"defaultValueOverride\": \"defaultOverride\",\n                \"defaltValue\": \"defaultValue\",\n                \"nativeClass\": \"nativeClass\",\n                \"aliases\": [\n                    \"First\"\n                ],\n                \"sortOrder\": \"UNSORTED\",\n                \"description\": \"first column\",\n                \"significantDigits\": 0,\n                \"precision\": 0,\n                \"fixedValue\": \"name\",\n                \"formula\": \"formula\"\n            },\n            {\n                \"qualifiedName\": \"(host)=HOST::(database)=MINIMAL-all-props-incomplete::(database_schema)=DB2INST1::(database_table)=EMPLNAME-all-props-incomplete::(database_column)=SURNAME\",\n                \"displayName\": \"SURNAME\",\n                \"minCardinality\": 1,\n                \"maxCardinality\": 1,\n                \"isDeprecated\": false,\n                \"isNullable\": false,\n                \"minimuumLength\": 0,\n                \"length\": 50,\n                \"allowsDuplicateValues\": true,\n                \"position\": 3,\n                \"dataType\": \"STRING\",\n                \"orderedValues\": true,\n                \"defaultValueOverride\": \"defaultOverride\",\n                \"defaltValue\": \"defaultValue\",\n                \"nativeClass\": \"nativeClass\",\n                \"aliases\": [\n                    \"Last\"\n                ],\n                \"sortOrder\": \"UNSORTED\",\n                \"description\": \"surname column\",\n                \"significantDigits\": 0,\n                \"precision\": 0,\n                \"fixedValue\": \"name\",\n                \"formula\": \"formula\"\n            },\n            {\n                \"qualifiedName\": \"(database_schema)=DB2INST1-all-props-incomplete::(database_table)=EMPLNAME-all-props-incomplete::(database_column)=LOCID\",\n                \"displayName\": \"LOCID\",\n                \"minCardinality\": 1,\n                \"maxCardinality\": 1,\n                \"isDeprecated\": false,\n                \"isNullable\": false,\n                \"allowsDuplicateValues\": true,\n                \"position\": 4,\n                \"dataType\": \"INTEGER\",\n                \"orderedValues\": true,\n                \"defaultValueOverride\": \"defaultOverride\",\n                \"defaltValue\": \"defaultValue\",\n                \"nativeClass\": \"nativeClass\",\n                \"aliases\": [\n                    \"Location\"\n                ],\n                \"sortOrder\": \"ASCENDING\",\n                \"description\": \"locid column\",\n                \"significantDigits\": 0,\n                \"precision\": 0,\n                \"fixedValue\": \"1\",\n                \"formula\": \"formula\"\n            }\n        ],\n        \"incomplete\": true\n    },\n    \"externalSourceName\": \"(organization)=Company::(project)=ExternalDataPlatform\"\n}"
				},
				"url": {
					"raw": "{{base-url}}/servers/{{server-id}}/open-metadata/access-services/data-engine/users/{{user-id}}/relational-tables",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"servers",
						"{{server-id}}",
						"open-metadata",
						"access-services",
						"data-engine",
						"users",
						"{{user-id}}",
						"relational-tables"
					]
				}
			},
			"response": []
		},
		{
			"name": "3.7 Create incomplete DataFile - required props only",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"externalSourceName\": \"(organization)=Company::(project)=ExternalDataPlatform\",\n    \"file\": {\n        \"fileType\": \"DataFile\",\n        \"qualifiedName\": \"(host)=HOST::(data_file)=DATAFILE-incomplete.DAT\",\n        \"displayName\": \"dataFile-incomplete.dat\",\n        \"pathName\": \"/home/files/dataFile-incomplete.dat\",\n        \"networkAddress\": \"localhost\",\n        \"columns\": [\n            {\n                \"qualifiedName\": \"(data_file)=DATAFILE-incomplete.DAT::(data_file_record)=schema::(data_file_field)=COLUMN-A\",\n                \"displayName\": \"column-a\"\n            },\n            {\n                \"qualifiedName\": \"(data_file)=DATAFILE-incomplete.DAT::(data_file_record)=schema::(data_file_field)=COLUMN-B\",\n                \"displayName\": \"column-b\"\n            }\n        ],\n        \"incomplete\": true\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base-url}}/servers/{{server-id}}/open-metadata/access-services/data-engine/users/{{user-id}}/data-files",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"servers",
						"{{server-id}}",
						"open-metadata",
						"access-services",
						"data-engine",
						"users",
						"{{user-id}}",
						"data-files"
					]
				}
			},
			"response": []
		},
		{
			"name": "3.8 Create incomplete DataFile - all properties",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"externalSourceName\": \"(organization)=Company::(project)=ExternalDataPlatform\",\n    \"file\": {\n        \"fileType\": \"DataFile\",\n        \"qualifiedName\": \"(file)=DATAFILE2-incomplete.DAT\",\n        \"displayName\": \"dataFile2-incomplete.dat\",\n        \"pathName\": \"/home/files/dataFile2-incomplete.dat\",\n        \"additionalProperties\": {\n            \"key1\": \"value1\",\n            \"key2\": \"value2\"\n        },\n        \"owner\": \"owner\",\n        \"ownerType\": \"USER_ID\",\n        \"zoneMembership\": [\n            \"ZONE_1\"\n        ],\n        \"createTime\": \"1617095893010\",\n        \"modifiedTime\": \"1617095893010\",\n        \"description\": \"Data file description.\",\n        \"protocol\": \"ftp\",\n        \"networkAddress\": \"localhost\",\n        \"columns\": [\n            {\n                \"qualifiedName\": \"(file)=DATAFILE2-incomplete.DAT::(column)=COLUMN-A\",\n                \"displayName\": \"column-a\",\n                \"additionalProperties\": {\n                    \"key-1\": \"value-1\",\n                    \"key-2\": \"value-2\"\n                },\n                \"description\": \"COLUMN-A DESCRIPTION\",\n                \"position\": 0,\n                \"minCardinality\": 0,\n                \"maxCardinality\": 1,\n                \"allowsDuplicateValues\": false,\n                \"orderedValues\": false,\n                \"defaultValueOverride\": \"COLUMN-A-DEFAULT-VALUE\",\n                \"nativeClass\": \"COLUMN-A-NATIVE-CLSAS\",\n                \"aliases\": [\n                    \"COLUMN-1\"\n                ],\n                \"dataItemSortOrder\": \"UNKNOWN\"\n            },\n            {\n                \"qualifiedName\": \"(file)=DATAFILE2-incomplete.DAT::(column)=COLUMN-B\",\n                \"displayName\": \"column-b\",\n                \"additionalProperties\": {\n                    \"key-1\": \"value-1\",\n                    \"key-2\": \"value-2\"\n                },\n                \"description\": \"COLUMN-B DESCRIPTION\",\n                \"position\": 0,\n                \"minCardinality\": 0,\n                \"maxCardinality\": 1,\n                \"allowsDuplicateValues\": false,\n                \"orderedValues\": false,\n                \"defaultValueOverride\": \"COLUMN-B-DEFAULT-VALUE\",\n                \"nativeClass\": \"COLUMN-B-NATIVE-CLSAS\",\n                \"aliases\": [\n                    \"COLUMN-2\"\n                ],\n                \"dataItemSortOrder\": \"UNKNOWN\"\n            }\n        ],\n        \"incomplete\": true\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base-url}}/servers/{{server-id}}/open-metadata/access-services/data-engine/users/{{user-id}}/data-files",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"servers",
						"{{server-id}}",
						"open-metadata",
						"access-services",
						"data-engine",
						"users",
						"{{user-id}}",
						"data-files"
					]
				}
			},
			"response": []
		},
		{
			"name": "3.9 Create incomplete CSVFile - required props only",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"externalSourceName\": \"(organization)=Company::(project)=ExternalDataPlatform\",\n    \"file\": {\n        \"fileType\": \"CSVFile\",\n        \"qualifiedName\": \"(file)=CSVFILE-incomplete.CSV\",\n        \"displayName\": \"csvFile-incomplete.csv\",\n        \"pathName\": \"/home/files/csvFile-incomplete.csv\",\n        \"networkAddress\" : \"localhost\",\n        \"columns\": [\n            {\n                \"qualifiedName\": \"(file)=CSVFILE-incomplete.CSV::(column)=COLUMN-A\",\n                \"displayName\": \"column-a\"\n            },\n            {\n                \"qualifiedName\": \"(file)=CSVFILE-incomplete.CSV::(column)=COLUMN-B\",\n                \"displayName\": \"column-b\"\n            }\n        ],\n         \"incomplete\": true\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base-url}}/servers/{{server-id}}/open-metadata/access-services/data-engine/users/{{user-id}}/data-files",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"servers",
						"{{server-id}}",
						"open-metadata",
						"access-services",
						"data-engine",
						"users",
						"{{user-id}}",
						"data-files"
					]
				}
			},
			"response": []
		},
		{
			"name": "3.10  Create incomplete CSVFile - all properties",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"externalSourceName\": \"(organization)=Company::(project)=ExternalDataPlatform\",\n    \"file\": {\n        \"fileType\": \"CSVFile\",\n        \"qualifiedName\": \"(file)=CSVFILE2-incomplete.CSV\",\n        \"displayName\": \"csvFile2-incomplete.csv\",\n        \"pathName\": \"/home/files/csvFile2-incomplete.csv\",\n        \"additionalProperties\": {\n            \"key1\": \"value1\",\n            \"key2\": \"value2\"\n        },\n        \"owner\": \"owner\",\n        \"ownerType\": \"USER_ID\",\n        \"zoneMembership\": [\n            \"ZONE_1\"\n        ],\n        \"createTime\": \"1617095893010\",\n        \"modifiedTime\": \"1617095893010\",\n        \"description\": \"Data file description.\",\n        \"protocol\": \"ftp\",\n        \"networkAddress\": \"localhost\",\n        \"columns\": [\n            {\n                \"qualifiedName\": \"(file)=CSVFILE2-incomplete.CSV::(column)=COLUMN-A\",\n                \"displayName\": \"column-a\",\n                \"additionalProperties\": {\n                    \"key-1\": \"value-1\",\n                    \"key-2\": \"value-2\"\n                },\n                \"description\": \"COLUMN-A DESCRIPTION\",\n                \"position\": 0,\n                \"minCardinality\": 0,\n                \"maxCardinality\": 1,\n                \"allowsDuplicateValues\": false,\n                \"orderedValues\": false,\n                \"defaultValueOverride\": \"COLUMN-A-DEFAULT-VALUE\",\n                \"nativeClass\": \"COLUMN-A-NATIVE-CLSAS\",\n                \"aliases\": [\n                    \"COLUMN-1\"\n                ],\n                \"dataItemSortOrder\": \"UNKNOWN\"\n            },\n            {\n                \"qualifiedName\": \"(file)=CSVFILE2-incomplete.CSV::(column)=COLUMN-B\",\n                \"displayName\": \"column-b\",\n                \"additionalProperties\": {\n                    \"key-1\": \"value-1\",\n                    \"key-2\": \"value-2\"\n                },\n                \"description\": \"COLUMN-B DESCRIPTION\",\n                \"position\": 0,\n                \"minCardinality\": 0,\n                \"maxCardinality\": 1,\n                \"allowsDuplicateValues\": false,\n                \"orderedValues\": false,\n                \"defaultValueOverride\": \"COLUMN-B-DEFAULT-VALUE\",\n                \"nativeClass\": \"COLUMN-B-NATIVE-CLSAS\",\n                \"aliases\": [\n                    \"COLUMN-2\"\n                ],\n                \"dataItemSortOrder\": \"UNKNOWN\"\n            }\n        ],\n        \"incomplete\": true\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base-url}}/servers/{{server-id}}/open-metadata/access-services/data-engine/users/{{user-id}}/data-files",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"servers",
						"{{server-id}}",
						"open-metadata",
						"access-services",
						"data-engine",
						"users",
						"{{user-id}}",
						"data-files"
					]
				}
			},
			"response": []
		},
		{
			"name": "4.1 Find entity - all props",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"identifiers\" : {\n        \"qualifiedName\": \"(organization)=Company::(project)=ExternalDataPlatform::/data\"\n    },\n    \"externalSourceName\": \"(organization)=Company::(project)=ExternalDataPlatform\",\n    \"type\": \"Referenceable\"\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base-url}}/servers/{{server-id}}/open-metadata/access-services/data-engine/users/{{user-id}}/find",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"servers",
						"{{server-id}}",
						"open-metadata",
						"access-services",
						"data-engine",
						"users",
						"{{user-id}}",
						"find"
					]
				}
			},
			"response": []
		},
		{
			"name": "4.2 Find entity - required props",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"identifiers\" : {\n        \"qualifiedName\": \"(organization)=Company::(project)=ExternalDataPlatform::/data\"\n    }\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base-url}}/servers/{{server-id}}/open-metadata/access-services/data-engine/users/{{user-id}}/find",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"servers",
						"{{server-id}}",
						"open-metadata",
						"access-services",
						"data-engine",
						"users",
						"{{user-id}}",
						"find"
					]
				}
			},
			"response": []
		},
		{
			"name": "5.1  Create topic required props",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"externalSourceName\": \"(organization)=Company::(project)=ExternalDataPlatform\",\n    \"topic\": {\n        \"qualifiedName\": \"(topic)=test-topic-basic\",\n        \"displayName\": \"test-topic-basic\"\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base-url}}/servers/{{server-id}}/open-metadata/access-services/data-engine/users/{{user-id}}/topics",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"servers",
						"{{server-id}}",
						"open-metadata",
						"access-services",
						"data-engine",
						"users",
						"{{user-id}}",
						"topics"
					]
				}
			},
			"response": []
		},
		{
			"name": "5.2  Create topic all props",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"externalSourceName\": \"(organization)=Company::(project)=ExternalDataPlatform\",\n    \"topic\": {\n        \"qualifiedName\": \"(topic)=test-topic\",\n        \"displayName\": \"test-topic\",\n        \"topicType\": \"topic-type\",\n        \"description\": \"topic description\",\n        \"otherOriginValues\": {\n            \"prop\": \"oherOrigin\"\n        },\n        \"owner\": \"owner\",\n        \"ownerType\": \"USER_ID\",\n        \"zoneMembership\": [\n            \"ZONE_1\"\n        ],\n        \"additionalProperties\": {\n            \"key1\": \"value1\",\n            \"key2\": \"value2\"\n        },\n        \"eventTypes\": [\n            {\n                \"qualifiedName\": \"(topic)=test-topic::(eventType)=test-event\",\n                \"displayName\": \"test-event\",\n                \"author\": \"author\",\n                \"usage\": \"usage\",\n                \"encodingStandard\": \"encoding\",\n                \"versionNumber\": \"versionNumber\",\n                \"isDeprecated\": false,\n                \"description\": \"event type description\",\n                \"eventSchemaAttributes\": [\n                    {\n                        \"qualifiedName\": \"(topic)=test-topic::(eventType)=test-event::(eventAttribute)=test-event-attribute\",\n                        \"displayName\": \"test-event-attribute\",\n                        \"minCardinality\": 1,\n                        \"maxCardinality\": 1,\n                        \"isDeprecated\": false,\n                        \"isNullable\": false,\n                        \"allowsDuplicateValues\": true,\n                        \"position\": 1,\n                        \"dataType\": \"INTEGER\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base-url}}/servers/{{server-id}}/open-metadata/access-services/data-engine/users/{{user-id}}/topics",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"servers",
						"{{server-id}}",
						"open-metadata",
						"access-services",
						"data-engine",
						"users",
						"{{user-id}}",
						"topics"
					]
				}
			},
			"response": []
		},
		{
			"name": "5.3  Create event type required props",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"externalSourceName\": \"(organization)=Company::(project)=ExternalDataPlatform\",\n    \"topicQualifiedName\": \"(topic)=test-topic-basic\",\n    \"eventType\": {\n        \"qualifiedName\": \"(topic)=test-topic-basic::(eventType)=test-event-basic\",\n        \"displayName\": \"test-event-basic\",\n        \"eventSchemaAttributes\": [\n            {\n                \"qualifiedName\": \"(topic)=test-topic-basic::(eventType)=test-event-basic::(eventAttribute)=test-event-attribute-basic\",\n                \"displayName\": \"test-event-attribute-basic\"\n            }\n        ]\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base-url}}/servers/{{server-id}}/open-metadata/access-services/data-engine/users/{{user-id}}/event-types",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"servers",
						"{{server-id}}",
						"open-metadata",
						"access-services",
						"data-engine",
						"users",
						"{{user-id}}",
						"event-types"
					]
				}
			},
			"response": []
		},
		{
			"name": "5.4  Create event type all props",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"externalSourceName\": \"(organization)=Company::(project)=ExternalDataPlatform\",\n    \"topicQualifiedName\": \"(topic)=test-topic\",\n    \"eventType\": {\n        \"qualifiedName\": \"(topic)=test-topic::(eventType)=test-event-2\",\n        \"displayName\": \"test-event-2\",\n        \"author\": \"author\",\n        \"usage\": \"usage\",\n        \"encodingStandard\": \"encoding\",\n        \"versionNumber\": \"versionNumber\",\n        \"isDeprecated\": false,\n        \"description\": \"event type description\",\n        \"eventSchemaAttributes\": [\n            {\n                \"qualifiedName\": \"(topic)=test-topic::(eventType)=test-event-2::(eventAttribute)=test-event-attribute-2\",\n                \"displayName\": \"test-event-attribute-2\",\n                \"minCardinality\": 1,\n                \"maxCardinality\": 1,\n                \"isDeprecated\": false,\n                \"isNullable\": false,\n                \"allowsDuplicateValues\": true,\n                \"position\": 1,\n                \"dataType\": \"INTEGER\"\n            }\n        ]\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base-url}}/servers/{{server-id}}/open-metadata/access-services/data-engine/users/{{user-id}}/event-types",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"servers",
						"{{server-id}}",
						"open-metadata",
						"access-services",
						"data-engine",
						"users",
						"{{user-id}}",
						"event-types"
					]
				}
			},
			"response": []
		},
		{
			"name": "5.5. Delete topic",
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"qualifiedName\": \"(topic)=test-topic\",\n    \"externalSourceName\": \"(organization)=Company::(project)=ExternalDataPlatform\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base-url}}/servers/{{server-id}}/open-metadata/access-services/data-engine/users/{{user-id}}/topics",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"servers",
						"{{server-id}}",
						"open-metadata",
						"access-services",
						"data-engine",
						"users",
						"{{user-id}}",
						"topics"
					]
				}
			},
			"response": []
		},
		{
			"name": "5.6 Delete event type",
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"qualifiedName\": \"(topic)=test-topic::(eventType)=test-event\",\n    \"externalSourceName\": \"(organization)=Company::(project)=ExternalDataPlatform\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base-url}}/servers/{{server-id}}/open-metadata/access-services/data-engine/users/{{user-id}}/event-types",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"servers",
						"{{server-id}}",
						"open-metadata",
						"access-services",
						"data-engine",
						"users",
						"{{user-id}}",
						"event-types"
					]
				}
			},
			"response": []
		},
		{
			"name": "6.1 Upsert Processing State Classification",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "demo",
							"type": "string"
						},
						{
							"key": "password",
							"value": "demo",
							"type": "string"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"externalSourceName\": \"(organization)=Company::(project)=ExternalDataPlatform\",\n    \"processingState\": {\n        \"syncDatesByKey\" : {\n            \"{{criticalElement}}\" : \"{{criticalElementLastSyncTimestampLong}}\"\n        }\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base-url}}/servers/{{server-id}}/open-metadata/access-services/data-engine/users/{{user-id}}/processing-state",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"servers",
						"{{server-id}}",
						"open-metadata",
						"access-services",
						"data-engine",
						"users",
						"{{user-id}}",
						"processing-state"
					]
				}
			},
			"response": []
		},
		{
			"name": "6.2 Get Processing State Classification",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "demo",
							"type": "string"
						},
						{
							"key": "password",
							"value": "demo",
							"type": "string"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{base-url}}/servers/{{server-id}}/open-metadata/access-services/data-engine/users/{{user-id}}/processing-state?dataEngine=(organization)=Company::(project)=ExternalDataPlatform",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"servers",
						"{{server-id}}",
						"open-metadata",
						"access-services",
						"data-engine",
						"users",
						"{{user-id}}",
						"processing-state"
					],
					"query": [
						{
							"key": "dataEngine",
							"value": "(organization)=Company::(project)=ExternalDataPlatform"
						}
					]
				}
			},
			"response": []
		}
	]
}